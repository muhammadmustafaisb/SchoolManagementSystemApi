// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMSApi.Infrastructure.Data;

#nullable disable

namespace SMSApi.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SMSApi.Core.Models.Fee", b =>
                {
                    b.Property<int>("FeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeeId"));

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("FeeId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Result", b =>
                {
                    b.Property<int>("ResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Student", b =>
                {
                    b.Property<int>("StdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StdId"));

                    b.Property<int>("CurrentClassId")
                        .HasColumnType("int");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StdClassId")
                        .HasColumnType("int");

                    b.HasKey("StdId");

                    b.HasIndex("StdClassId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SMSApi.Core.Models.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentClasses");
                });

            modelBuilder.Entity("SMSApi.Core.Models.StudentResult", b =>
                {
                    b.Property<int>("ResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResId"));

                    b.Property<int>("ResultResId")
                        .HasColumnType("int");

                    b.Property<int>("StdId")
                        .HasColumnType("int");

                    b.Property<int>("StudentStdId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("ResId");

                    b.HasIndex("ResultResId");

                    b.HasIndex("StudentStdId");

                    b.HasIndex("SubjectID");

                    b.ToTable("StudentResult");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Subject", b =>
                {
                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Teacher", b =>
                {
                    b.Property<int>("TeachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeachId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("TeachId");

                    b.HasIndex("SubjectId")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Fee", b =>
                {
                    b.HasOne("SMSApi.Core.Models.Student", "Student")
                        .WithOne("Fee")
                        .HasForeignKey("SMSApi.Core.Models.Fee", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Student", b =>
                {
                    b.HasOne("SMSApi.Core.Models.StudentClass", "StdClass")
                        .WithMany("Students")
                        .HasForeignKey("StdClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StdClass");
                });

            modelBuilder.Entity("SMSApi.Core.Models.StudentResult", b =>
                {
                    b.HasOne("SMSApi.Core.Models.Result", "Result")
                        .WithMany("StudentResults")
                        .HasForeignKey("ResultResId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMSApi.Core.Models.Student", "Student")
                        .WithMany("StudentResults")
                        .HasForeignKey("StudentStdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMSApi.Core.Models.Subject", "Subject")
                        .WithMany("StudentResults")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Result");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Teacher", b =>
                {
                    b.HasOne("SMSApi.Core.Models.Subject", "Subject")
                        .WithOne("Teacher")
                        .HasForeignKey("SMSApi.Core.Models.Teacher", "SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Result", b =>
                {
                    b.Navigation("StudentResults");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Student", b =>
                {
                    b.Navigation("Fee")
                        .IsRequired();

                    b.Navigation("StudentResults");
                });

            modelBuilder.Entity("SMSApi.Core.Models.StudentClass", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SMSApi.Core.Models.Subject", b =>
                {
                    b.Navigation("StudentResults");

                    b.Navigation("Teacher")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
